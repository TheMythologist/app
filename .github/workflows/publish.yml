name: Build and release Git-Mastery CLI

on:
  workflow_dispatch:
  push:
    tags:
      - "v*.*.*"

permissions:
  contents: write
  pull-requests: write
  packages: read
  issues: read

jobs:
  linux:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Build binary
        run: |
          pyinstaller --onefile --name gitmastery-linux main.py

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: dist/gitmastery-linux
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  debian-build:
    strategy:
      matrix:
        os: [ubuntu-latest, ubuntu-24.04-arm]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Get binary name
        id: binary-name
        env:
          OS_VERSION: ${{ matrix.os }}
        run: |
          ARCHITECTURE=$([$OS_VERSION = "ubuntu-latest"] && "amd64" || "arm64")
          FILENAME=gitmastery-${GITHUB_REF_NAME#v}-linux-$ARCHITECTURE
          echo "binary=$FILENAME" >> $GITHUB_OUTPUT

      - name: Build binary
        env:
          BINARY_NAME: ${{ steps.binary-name.output.binary }}
        run: |
          pyinstaller --onefile --name $BINARY_NAME main.py

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: dist/${{ steps.binary-name.output.binary }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BINARY_NAME: ${{ steps.binary-name.output.binary }}

      - name: Publish package as artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.binary-name.output.binary }}
          path: dist/${{ steps.binary-name.output.binary }}

  debian-publish:
    needs: debian-build
    runs-on: ubuntu-latest

    steps:
      - name: Extract version
        run: |
          echo "VERSION=${GITHUB_REF_NAME#v}" >> $GITHUB_ENV

      - name: Create folder structure
        run: |
          mkdir gitmastery-${VERSION}

      - name: Download amd64 binaries from artifacts
        uses: actions/download-artifact@v4
        with:
          name: gitmastery-${{ env.VERSION }}-linux-amd64
          path: gitmastery-${{ env.VERSION }}/gitmastery-${{ env.VERSION }}-linux-amd64

      - name: Download arm64 binaries from artifacts
        uses: actions/download-artifact@v4
        with:
          name: gitmastery-${{ env.VERSION }}-linux-arm64
          path: gitmastery-${{ env.VERSION }}/gitmastery-${{ env.VERSION }}-linux-arm64

      - name: Logging
        run: |
          ls gitmastery-${VERSION}
          pwd

  windows:
    runs-on: windows-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Build binary
        run: |
          pyinstaller --onefile --name gitmastery main.py

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: dist/gitmastery.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  macos:
    runs-on: macos-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Build binary
        run: |
          pyinstaller --onefile --name gitmastery main.py

      - name: Generate SHA256
        id: checksum
        run: |
          FILENAME=gitmastery
          SHA256=$(shasum -a 256 dist/$FILENAME | cut -d ' ' -f1)
          echo "sha256=$SHA256" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: dist/gitmastery
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update Homebrew Tap
        env:
          GH_TOKEN: ${{ secrets.ORG_PAT }}
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

          git clone https://x-access-token:${GH_TOKEN}@github.com/git-mastery/homebrew-gitmastery.git
          cd homebrew-gitmastery
          ls

          cat <<EOF > gitmastery.rb
          class Gitmastery < Formula
            desc "CLI tool for Git-Mastery"
            homepage "https://github.com/git-mastery/cli"
            url "https://github.com/git-mastery/cli/releases/download/${GITHUB_REF_NAME}/gitmastery"
            sha256 "${{ steps.checksum.outputs.sha256 }}"
            version "${GITHUB_REF_NAME#v}"

            def install
              chmod 0755, "gitmastery"
              bin.install "gitmastery"
            end

            test do
              system "#{bin}/gitmastery", "--help"
            end
          end
          EOF

          git remote set-url origin https://x-access-token:${GH_TOKEN}@github.com/git-mastery/homebrew-gitmastery.git
          git remote -v
          git add gitmastery.rb
          git commit -m "Update to ${GITHUB_REF_NAME}"
          git push origin main
